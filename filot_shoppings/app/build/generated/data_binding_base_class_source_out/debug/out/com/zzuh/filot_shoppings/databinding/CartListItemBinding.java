// Generated by view binder compiler. Do not edit!
package com.zzuh.filot_shoppings.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.zzuh.filot_shoppings.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CartListItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText itemCntEt;

  @NonNull
  public final TextView itemTitle;

  @NonNull
  public final Button minusBtn;

  @NonNull
  public final TextView optionItem;

  @NonNull
  public final Button plusBtn;

  @NonNull
  public final ImageView productImg;

  @NonNull
  public final TextView productPriceItem;

  private CartListItemBinding(@NonNull LinearLayout rootView, @NonNull EditText itemCntEt,
      @NonNull TextView itemTitle, @NonNull Button minusBtn, @NonNull TextView optionItem,
      @NonNull Button plusBtn, @NonNull ImageView productImg, @NonNull TextView productPriceItem) {
    this.rootView = rootView;
    this.itemCntEt = itemCntEt;
    this.itemTitle = itemTitle;
    this.minusBtn = minusBtn;
    this.optionItem = optionItem;
    this.plusBtn = plusBtn;
    this.productImg = productImg;
    this.productPriceItem = productPriceItem;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CartListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CartListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.cart_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CartListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_cnt_et;
      EditText itemCntEt = ViewBindings.findChildViewById(rootView, id);
      if (itemCntEt == null) {
        break missingId;
      }

      id = R.id.item_title;
      TextView itemTitle = ViewBindings.findChildViewById(rootView, id);
      if (itemTitle == null) {
        break missingId;
      }

      id = R.id.minus_btn;
      Button minusBtn = ViewBindings.findChildViewById(rootView, id);
      if (minusBtn == null) {
        break missingId;
      }

      id = R.id.option_item;
      TextView optionItem = ViewBindings.findChildViewById(rootView, id);
      if (optionItem == null) {
        break missingId;
      }

      id = R.id.plus_btn;
      Button plusBtn = ViewBindings.findChildViewById(rootView, id);
      if (plusBtn == null) {
        break missingId;
      }

      id = R.id.product_img;
      ImageView productImg = ViewBindings.findChildViewById(rootView, id);
      if (productImg == null) {
        break missingId;
      }

      id = R.id.product_price_item;
      TextView productPriceItem = ViewBindings.findChildViewById(rootView, id);
      if (productPriceItem == null) {
        break missingId;
      }

      return new CartListItemBinding((LinearLayout) rootView, itemCntEt, itemTitle, minusBtn,
          optionItem, plusBtn, productImg, productPriceItem);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
